[gcode_macro HOME_ACCURACY_TEST]
gcode:
    {% set iterations = params.ITERATIONS|default(5)|int %}
    M400
    G28

    {% for i in range(iterations) %}
      G28 XY
      M400
      G90
      G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
      M400
      G4 P1000 
      GET_POSITION
    {% endfor %}

[gcode_macro SPEED_MULTIPLIER]
gcode:
    {% set scale = params.MULTIPLIER|default(1)|float * 100 %}
   M220 S{scale}

[gcode_macro _ASSERT_TEMPS_SET]
gcode:
    {% set bed_temp = params.BED_TEMPERATURE|default(0)|float %}
    {% set nozzle_temp = params.NOZZLE_TEMPERATURE|default(0)|float %}
    {% if bed_temp < 20 %}
      M117 Too low initial bed temperature: { bed_temp } < 20
      M112 # emergency stop is the only way I found to abort the print
    {% endif %}
    {% if nozzle_temp < 20 %}
      M117 Too low initial nozzle temperature: { nozzle_temp } < 20
      M112 # emergency stop is the only way I found to abort the print
    {% endif %}

[gcode_macro _HOME_IFF_NEEDED]
gcode:
    {% if 'xyz' not in printer.toolhead.homed_axes %}
      G28
    {% endif %}

[gcode_macro NOZZLE_PRIME]
gcode:
    {% set bed_temp = params.BED_TEMPERATURE|default(0)|float %}
    {% set nozzle_temp = params.NOZZLE_TEMPERATURE|default(0)|float %}
    SAVE_GCODE_STATE NAME=nozzle_prime_state
    _ASSERT_TEMPS_SET BED_TEMPERATURE={bed_temp} NOZZLE_TEMPERATURE={nozzle_temp}

    M117 Priming Nozzle...
    M104 S{nozzle_temp}
    M140 S{bed_temp}
    _HOME_IFF_NEEDED
    G90 ; Absolute coords
    G1 X5 Y5 F6000
    G1 Z2 F720
    M109 S{nozzle_temp}
    M190 S{bed_temp}
    G1 Z0.2 F720
    M83 ; Relative extruder
    G1 E5 F300
    G1 X60 E6 F1000 ; intro line
    G1 X140 E14 F1000 ; intro line
    G1 Z1 F720
    RESTORE_GCODE_STATE NAME=nozzle_prime_state

[gcode_macro PRINT_START]
gcode:
    {% set bed_temp = params.BED_TEMPERATURE|default(0)|float %}
    {% set nozzle_temp = params.NOZZLE_TEMPERATURE|default(0)|float %}
    SAVE_GCODE_STATE NAME=print_start_state
    _ASSERT_TEMPS_SET BED_TEMPERATURE={bed_temp} NOZZLE_TEMPERATURE={nozzle_temp}

    M117 Start Pre-heating...
    M104 S{nozzle_temp//2} 
    M140 S{bed_temp}

    M117 Initial Homing...
    _HOME_IFF_NEEDED

    M117 Heating Bed...
    M190 S{bed_temp}

    M117 Tilt Adjust...
    Z_TILT_ADJUST

    M117 Re-Homing Z...
    G28 Z

    M117 Bed Mesh...
    BED_MESH_CALIBRATE
    SET_SKEW XY=140.93,140.99,99.62  # Calibrated on 2023-07-12
    #SET_SKEW XY=140.89,140.95,99.64 # Calibrated on 2023-06-25
    #SET_SKEW XY=141.21,140.69,99.72 # Calibrated on 2023-06-04

    G4 P500 ; Slight pause
    NOZZLE_PRIME BED_TEMPERATURE={bed_temp} NOZZLE_TEMPERATURE={nozzle_temp}
    M117 Ready
    RESTORE_GCODE_STATE NAME=print_start_state

#[gcode_macro test]
#gcode:
#    {% set t = [25, printer.toolhead.axis_maximum.z - printer.toolhead.position.z]|min %}
#    RESPOND MSG="{t}"; 

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-6.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    G91
    {% set z_drop = [25, printer.toolhead.axis_maximum.z - printer.toolhead.position.z]|min %}
    G0 Z{z_drop}
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro _MOVE_FILAMENT]
gcode:
    {% set th = printer.toolhead %}
    {% set nozzle_temp = params.TEMPERATURE|float %}
    {% set distance = params.DISTANCE|default(50)|float %}
    {% set purge = params.PURGE|default(100)|float %}
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = 60 * printer.configfile.settings['extruder'].max_extrude_only_velocity -1 %} ; convert from mm/s to mm/min
    SAVE_GCODE_STATE NAME=STATE_MOVE_FILAMENT

    {% if nozzle_temp >= 100 %}
      M117 Heating Nozzle...
      M104 S{nozzle_temp}
      ; Move toolhead to front for easy access and to avoid purged filament falling in an annoying location
      _HOME_IFF_NEEDED 
      G90
      G1 Z100 F1500
      G1 X{th.axis_maximum.x//2} Y{th.axis_minimum.y + 20} F6000
      M109 S{nozzle_temp}
      
      M117 (Un)Loading Filament...
      M83 ; Relative Extruder
      {% if distance > 0 %}
        G1 E{distance} F{max_velocity}
        G1 E{purge} F{speed}
      {% else %}
        G1 E{purge} F{speed}
        G1 E{distance} F{max_velocity}
      {% endif %}
    {% else %}
      M117 Too low initial nozzle temperature: { nozzle_temp } < 100
      M118 Too low initial nozzle temperature: { nozzle_temp } < 100
    {% endif %}

    RESTORE_GCODE_STATE NAME=STATE_MOVE_FILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    _MOVE_FILAMENT TEMPERATURE={params.TEMPERATURE} DISTANCE=70 PURGE=15 SPEED=600

[gcode_macro UNLOAD_FILAMENT]
gcode:
    _MOVE_FILAMENT TEMPERATURE={params.TEMPERATURE} DISTANCE=-130 PURGE=-15 SPEED=600

[gcode_macro HOME_ACCURACY]
gcode:
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    {% set axes = params.AXES|default('XY') %}
    SAVE_GCODE_STATE NAME=STATE_HOME_ACCURACY
    {% for i in range(iterations) %}
      G28 {axes}
      M400
      GET_POSITION
    {% endfor %}
    RESTORE_GCODE_STATE NAME=STATE_HOME_ACCURACY

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=20 BOUND=50
[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        M400
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
