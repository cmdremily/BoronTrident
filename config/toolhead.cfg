[mcu toolhead]
canbus_uuid: 33db45c6caba

#####################################################################
#   Extruder
#####################################################################
#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
enable_pin: !toolhead:PD2
step_pin: toolhead:PD0
dir_pin: !toolhead:PD1
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 23.34914882 #22.67141156
gear_ratio: 50:10
microsteps: 16
full_steps_per_rotation: 200
max_extrude_only_distance: 130
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: toolhead:PB13
sensor_type: PT1000
sensor_pin: toolhead:PA3
pullup_resistor: 2195
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
control = pid
pid_Kp = 26.539
pid_Ki = 1.805
pid_Kd = 97.531

##  Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: toolhead:PA15
interpolate: false
sense_resistor: 0.110
run_current: 0.707 # CS 22
driver_TBL: 1 # 1.6 mH, 2.1R, Ipeak=1A
driver_TOFF: 3 # 41.7Khz max chopper frequency
driver_HSTRT: 7
driver_HEND: 9
stealthchop_threshold: 0

[heater_fan hotend_fan]
pin: toolhead:PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0 # HF hotend has high risk of heat creep, full speed all the time.

[fan]
pin: toolhead:PA1
kick_start_time: 0.5
off_below: 0.10

[temperature_sensor toolhead_mcu]
sensor_type: temperature_mcu
sensor_mcu: toolhead

#sensor_temperature1:
#sensor_adc1:
#   Specify the above two parameters (a temperature in Celsius and an
#   ADC value as a float between 0.0 and 1.0) to calibrate the
#   micro-controller temperature. This may improve the reported
#   temperature accuracy on some chips. A typical way to obtain this
#   calibration information is to completely remove power from the
#   printer for a few hours (to ensure it is at the ambient
#   temperature), then power it up and use the QUERY_ADC command to
#   obtain an ADC measurement. Use some other temperature sensor on
#   the printer to find the corresponding ambient temperature. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.
#sensor_temperature2:
#sensor_adc2:
#   If sensor_temperature1/sensor_adc1 is specified then one may also
#   specify sensor_temperature2/sensor_adc2 calibration data. Doing so
#   may provide calibrated "temperature slope" information. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.


[adxl345]
cs_pin: toolhead:PB12
spi_software_sclk_pin: toolhead:PB10
spi_software_mosi_pin: toolhead:PB11
spi_software_miso_pin: toolhead:PB2
axes_map: x,z,-y
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

[probe]
##  Super PINDA
pin: toolhead:PB6
x_offset: 0
y_offset: 24.5
z_offset: 1.455 #(70C Bed) 1.485 # (85C bed), 1.525 (??C Bed), 1.575 (120C? bed) 1.540 (?? bed)
speed: 12 # Prusa MK3 uses 13.33 mm/s for both lift and speed
lift_speed: 12
samples: 7
samples_result: median
sample_retract_dist: 0.4 # MK3 uses 0.2, but that doesn't work for us?
samples_tolerance: 0.005
samples_tolerance_retries: 10