[gcode_macro _ASSERT_TEMPS_SET]
gcode:
  {% set bed_temp = params.BED|default(0)|float %}
  {% set nozzle_temp = params.NOZZLE|default(0)|float %}
  {% if bed_temp < 20 %}
    M117 Too low initial bed temperature: { bed_temp } < 20
    M112 # emergency stop is the only way I found to abort the print
  {% endif %}
  {% if nozzle_temp < 20 %}
    M117 Too low initial nozzle temperature: { nozzle_temp } < 20
    M112 # emergency stop is the only way I found to abort the print
  {% endif %}

[gcode_macro _KINEMATIC_INIT]
description: Ensures that the toolhead is able to move safely.
gcode:
  SAVE_GCODE_STATE NAME=kinematic_init
  M117 Initializing Kinematics...
  SET_SKEW XY=140.93,140.99,99.62  # Calibrated on 2023-07-12
  #SET_SKEW XY=140.89,140.95,99.64 # Calibrated on 2023-06-25
  #SET_SKEW XY=141.21,140.69,99.72 # Calibrated on 2023-06-04
  _HOME_IFF_NEEDED
  Z_TILT_ADJUST
  RESTORE_GCODE_STATE NAME=kinematic_init

[gcode_macro _PREHEAT]
description: Preheats bed and chamber to set temperatures, nozzle to half temperature (anti-ooze).
gcode:
  {% set chb_tgt = params.CHAMBER|default(0)|float %}
  {% set bed_tgt = params.BED|default(0)|float %}
  {% set noz_tgt = params.NOZZLE|default(0)|float %}
  {% set mcu_dt_over_amb = 8 %}
  {% set bed_max = printer.configfile.settings.heater_bed.max_temp - 10 %}
  SAVE_GCODE_STATE NAME=preheat

  M117 Preheating...

  {% if chb_tgt > bed_max//2 %}
    action_respond_info({ chb_tgt } > {bed_max//2}, reducing to {bed_max//2})
    {% set chb_tgt = bed_max//2 %}
  {% endif %}

  {% if chb_tgt > 0 %} # Heat the chamber
    # Maximum bed temp to make heating fast and efficient.
    M140 S{bed_max}

    # Let the nozzle help by using a non-oozing temp
    M104 S{noz_tgt//2}

    # Run the print fan at max to circulate the air better.
    M106 S255

    # Move bed up to nozzle to reduce the volume of air that
    # needs to be heated before the print can start. The rest
    # of the chamber will heat as the print progresses but the
    # work will remain in a hot environment.
    _POS_HEAT_SOAK

    # TODO: Drive the hotend in a circle to circulate air?

    # Wait until we get close to the target ambient.
    TEMPERATURE_WAIT SENSOR="temperature_sensor toolhead_mcu" MINIMUM={chb_tgt}

    # Let bed cool to target temperature while we gain the last few degrees of heat.
    M190 S{bed_tgt}
    
    # Turn part fan off to let chamber settle.
    M107

    # Wait until we hit the target.
    TEMPERATURE_WAIT SENSOR="temperature_sensor toolhead_mcu" MINIMUM={chb_tgt + mcu_dt_over_amb}
  {% else %} # No chamber heating requested.
    # TODO: Beep to remind the user to open doors when no chamber heating
    # is requested.
    M104 S{noz_tgt//2} # Heat nozzle without waiting
    M190 S{bed_tgt}    # Wait for bed to reach target temp.
  {% endif %}
  RESTORE_GCODE_STATE NAME=preheat

[gcode_macro _KINEMATIC_CALIBRATION]
description: Ensures that the toolhead is able to move safely.
gcode:
  {% set mesh_min = params.MESH_MIN|default("NONE")|string %}
  {% set mesh_max = params.MESH_MAX|default("NONE")|string %}
  SAVE_GCODE_STATE NAME=kinematic_calibration

  M117 Calibrating Kinematics...
  Z_TILT_ADJUST
  G28 Z # XY offset doesn't matter, only home Z.

  {% if mesh_min != "NONE" and mesh_max != "NONE" %}
    {% set mesh_cfg = printer.configfile.settings.bed_mesh %}
    {% set padding = 5 %}
    {% set probe_pitch = 50 %}
    {% set param_mesh_min = mesh_min.split(",") %}
    {% set param_mesh_max = mesh_max.split(",") %}
    {% set mesh_min_x = (mesh_cfg.mesh_min[0], (param_mesh_min[0]|float - padding))|max %}
    {% set mesh_min_y = (mesh_cfg.mesh_min[1], (param_mesh_min[1]|float - padding))|max %}
    {% set mesh_max_x = (mesh_cfg.mesh_max[0], (param_mesh_max[0]|float + padding))|min %}
    {% set mesh_max_y = (mesh_cfg.mesh_max[1], (param_mesh_max[1]|float + padding))|min %}
    {% set mesh_sz_x = mesh_max_x - mesh_min_x %}
    {% set mesh_sz_y = mesh_max_y - mesh_min_y %}
    {% set probes_x = (3, (mesh_sz_x / probe_pitch)|round(0,'ceil')|int)|max %}
    {% set probes_y = (3, (mesh_sz_y / probe_pitch)|round(0,'ceil')|int)|max %}
    {% set algorithm = 'lagrange' if (probes_x, probes_y)|max <= 6 else 'bicubic' %}

    BED_MESH_CALIBRATE MESH_MIN={mesh_min_x},{mesh_min_y} MESH_MAX={mesh_max_x},{mesh_max_y} PROBE_COUNT={probes_x},{probes_y} ALGORITHM={algorithm}
  {% else %}
    BED_MESH_CALIBRATE
  {% endif %}

  G4 P500 # Slight pause to let kinematics settle
  RESTORE_GCODE_STATE NAME=kinematic_calibration

[gcode_macro _NOZZLE_PRIME]
description: Draws a purge line, similar to Prusa MK3. 
gcode:
  {% set nozzle_temp = params.NOZZLE|default(0)|float %}
  {% set mesh_min = params.MESH_MIN|default("NONE")|string %}
  SAVE_GCODE_STATE NAME=nozzle_prime_state
  M117 Priming Nozzle...
  G90 ; Absolute coords
  {% if mesh_min != "NONE" and mesh_max != "NONE" %} # Move purge line into probed area
    # Identical to code in _KINEMATIC_CALIBRATION
    {% set mesh_cfg = printer.configfile.settings.bed_mesh %}
    {% set padding = 5 %}
    {% set param_mesh_min = mesh_min.split(",") %}
    {% set mesh_min_x = (mesh_cfg.mesh_min[0], (param_mesh_min[0]|float - padding))|max %}
    {% set mesh_min_y = (mesh_cfg.mesh_min[1], (param_mesh_min[1]|float - padding))|max %}
    G0 X{mesh_min_x} Y{mesh_min_y} 
    G0 Z2
  {% else %}
    G0 X5 Y5
    G0 Z2
  {% endif %}
  M109 S{nozzle_temp}
  G0 Z0.2
  M83 ; Relative extruder
  G1 E5 F300
  G1 X60 E6 F1000 ; intro line
  G1 X140 E14 F1000 ; intro line
  G1 Z1 F720
  RESTORE_GCODE_STATE NAME=nozzle_prime_state

# Example start GCODE for prusa slicer: 
# _PRINT_START BED_TEMPERATURE=[first_layer_bed_temperature] 
#              NOZZLE_TEMPERATURE=[first_layer_temperature]
#              FILAMENT=[filament_type]
#              MESH_MIN={first_layer_print_min[0]},{first_layer_print_min[1]}
#              MESH_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}
[gcode_macro _PRINT_START]
gcode:
  {% set global = printer["gcode_macro GLOBAL"] %}
  {% set bed_temp = params.BED_TEMPERATURE|default(0)|float %}
  {% set nozzle_temp = params.NOZZLE_TEMPERATURE|default(0)|float %}
  {% set filament = params.FILAMENT|default("NONE")|string %}
  {% set mesh_min = params.MESH_MIN|default("NONE")|string %}
  {% set mesh_max = params.MESH_MAX|default("NONE")|string %}
  {% set chamber_temp = 0|float %}
  SAVE_GCODE_STATE NAME=print_start

  {% if filament != 'NONE' %}
  {%   if filament in global.chamber_temp[filament] %}
  {%     set chamber_temp = global.chamber_temp[filament] %}
        {action_respond_info("Filament chamber temp - " + chamber_temp|string)}
  {%   else %}
        # The user intended a chamber temp be set be we couldn't figure out which,
        # the print will likely fail if we try so we have to e-stop as it's the
        # only way to stop the print.
        M112
  {%   endif %}
  {% endif %}

  _ASSERT_TEMPS_SET BED={bed_temp} NOZZLE={nozzle_temp}

  # Start heating immedieately to shorten startup time
  M140 S{bed_temp}
  M104 S{nozzle_temp//2} # Only to half nozzle temp to avoid oozing.

  _KINEMATIC_INIT
  _PREHEAT BED={bed_temp} NOZZLE={nozzle_temp} CHAMBER={chamber_temp} 
  # Perform final calibration of kinematics after we have heat soaked
  # and thermal expansion of the frame has settled.
  _KINEMATIC_CALIBRATION MESH_MIN={mesh_min} MESH_MAX={mesh_max}
  _NOZZLE_PRIME NOZZLE={nozzle_temp} MESH_MIN={mesh_min}

  M117 Printing...
  RESTORE_GCODE_STATE NAME=print_start

[gcode_macro _PRINT_END]
gcode:
  # safe anti-stringing move coords
  {% set pos = printer.toolhead.position %}
  {% set pos_max = printer.toolhead.axis_maximum %}
  {% set x_safe = pos.x + 20 * (1 if pos_max.x - pos.x > 20 else -1) %}
  {% set y_safe = pos.y + 20 * (1 if pos_max.y - pos.y > 20 else -1) %}
  {% set z_safe = [pos.z + 2, pos_max.z]|min %}
  
  SAVE_GCODE_STATE NAME=STATE_PRINT_END
  
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-6.0 F3600                 ; retract filament
  
  TURN_OFF_HEATERS
  
  G90                                      ; absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
  _POS_PARK
  M107                                     ; turn off fan
  
  BED_MESH_CLEAR
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END

